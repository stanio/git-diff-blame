#!/usr/bin/perl -w
#
# This is free and unencumbered software released into the public domain.
#
# Anyone is free to copy, modify, publish, use, compile, sell, or
# distribute this software, either in source code form or as a compiled
# binary, for any purpose, commercial or non-commercial, and by any
# means.

sub parse_hunk_header {
	my ($line) = @_;
	my ($o_ofs, $o_cnt, $n_ofs, $n_cnt) =
	    $line =~ /^@@ -(\d+)(?:,(\d+))? \+(\d+)(?:,(\d+))? @@/;
	$o_cnt = 1 unless defined $o_cnt;
	$n_cnt = 1 unless defined $n_cnt;
	return ($o_ofs, $o_cnt, $n_ofs, $n_cnt);
}

sub get_blame_prefix {
	my ($line) = @_;
	$line =~ /^(\^?[0-9a-f]+\s+(\S+\s+)?\([^\)]+\))/ or return '?????'; # die "bad blame output: $line";
	return $1;
}

$git_root = `git rev-parse --show-toplevel`;
$git_root =~ s/^\s+//;
$git_root =~ s/\s+$//;
chdir($git_root) or die "$!";

my @diff_opts = ('-w');
my ($oldrev, $newrev, @args) = @ARGV;
$oldrev ||= 'HEAD';
if ($newrev) {
	open($diff, '-|', 'git', '--no-pager', 'diff', $oldrev, $newrev, @diff_opts, @args, ':!**/package-lock.json') or die;
} else {
	open($diff, '-|', 'git', '--no-pager', 'diff', $oldrev, @diff_opts, @args, ':!**/package-lock.json') or die;
}

my $istty = -t STDOUT;
my $ANSI_RED = $istty ? "[31m" : "";
my $ANSI_GRN = $istty ? "[32m" : "";
my $ANSI_RST = $istty ? "[m"   : "";
my ($pre, $post);
my $filename;
while (<$diff>) {
	if (m{^diff --git a/(.*) b/(.*)$} || m{^diff --git ./(.*) ./(.*)$}) {
		close $pre if defined $pre;
		close $post if defined $post;
		print "\n";
		$prefilename = "./" . $1;
		$postfilename = "./" . $2;
		$delete = $create = 0;
	} elsif (m{^new file}) {
		$create = 1;
		$prefilename = '/dev/null';
		print;
	} elsif (m{^deleted file}) {
		$delete = 1;
		$postfilename = '/dev/null';
		print;
	} elsif (m{^--- $prefilename\t?$}) {
		# ignore
		print;
	} elsif (m{^\+\+\+ $postfilename$}) {
		# ignore
		print;
	} elsif (m{^@@ }) {
		my ($o_ofs, $o_cnt, $n_ofs, $n_cnt)
			= parse_hunk_header($_);
		my $o_end = $o_ofs + $o_cnt - 1;
		my $n_end = $n_ofs + $n_cnt - 1;
		if (!$create) {
			close $pre if defined $pre;
			# print "blame -w --date=short -L$o_ofs,$o_end $oldrev -- $prefilename\n";
			open($pre, '-|', 'git', '--no-pager', 'blame', @diff_opts, '--date=short', "-L$o_ofs,$o_end",
			     $oldrev, '--', $prefilename) or die;
		}
		if (!$delete) {
			close $post if defined $post;
			if ($newrev) {
				# print "blame -w --date=short -L$n_ofs,$n_end $newrev -- $postfilename\n";
				open($post, '-|', 'git', '--no-pager', 'blame', @diff_opts, '--date=short', "-L$n_ofs,$n_end",
				     $newrev, '--', $postfilename) or die;
			} else {
				# print "blame -w --date=short -L$n_ofs,$n_end -- $postfilename\n";
				open($post, '-|', 'git', '--no-pager', 'blame', @diff_opts, '--date=short', "-L$n_ofs,$n_end",
				     '--', $postfilename) or die;
			}
		}
		print;
	} elsif (m{^ }) {
		print "  ", get_blame_prefix(scalar <$pre>), "\t", $_;
		scalar <$post>; # discard
	} elsif (m{^\-}) {
		print "${ANSI_RED}- ", get_blame_prefix(scalar <$pre>), "\t", $_,"${ANSI_RST}";
	} elsif (m{^\+}) {
		print "${ANSI_GRN}+ ", get_blame_prefix(scalar <$post>), "\t", $_,"${ANSI_RST}";
	} else {
		print;
	}
}
